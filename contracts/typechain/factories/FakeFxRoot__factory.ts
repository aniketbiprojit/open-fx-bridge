/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FakeFxRoot, FakeFxRootInterface } from "../FakeFxRoot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessageToChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
    ],
    name: "setFxChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061021a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b47204771461003b578063b86cfdcf14610057575b600080fd5b61005560048036038101906100509190610143565b610073565b005b610071600480360381019061006c919061011a565b610078565b005b505050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506100ca816101cd565b92915050565b60008083601f8401126100e257600080fd5b8235905067ffffffffffffffff8111156100fb57600080fd5b60208301915083600182028301111561011357600080fd5b9250929050565b60006020828403121561012c57600080fd5b600061013a848285016100bb565b91505092915050565b60008060006040848603121561015857600080fd5b6000610166868287016100bb565b935050602084013567ffffffffffffffff81111561018357600080fd5b61018f868287016100d0565b92509250509250925092565b60006101a6826101ad565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101d68161019b565b81146101e157600080fd5b5056fea2646970667358221220b46f21b46c79f38db32aa5cf8713ae647d12ccf456f71dce6a58512ca9de0fd064736f6c63430008040033";

export class FakeFxRoot__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FakeFxRoot> {
    return super.deploy(overrides || {}) as Promise<FakeFxRoot>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FakeFxRoot {
    return super.attach(address) as FakeFxRoot;
  }
  connect(signer: Signer): FakeFxRoot__factory {
    return super.connect(signer) as FakeFxRoot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeFxRootInterface {
    return new utils.Interface(_abi) as FakeFxRootInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeFxRoot {
    return new Contract(address, _abi, signerOrProvider) as FakeFxRoot;
  }
}
