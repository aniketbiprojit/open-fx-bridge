{
  "address": "0x7e3B1Ea2D36Ac407b4B027a1E93CcC97629198f3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fxChild",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "MessageSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stateId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "fxChild",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxRootTunnel",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stateId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "rootMessageSender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "processMessageFromRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendEncodedBytesMessageToRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendEncodedMessageToRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "sendMessageToRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fxRootTunnel",
          "type": "address"
        }
      ],
      "name": "setFxRootTunnel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf1c1a471325f1367d41c33b319f52424c9baa4ff6e6ca17d0b4bd843f5dbd497",
  "receipt": {
    "to": null,
    "from": "0x79f3E0FfB9ab81C05731a05DbCDE4956014Ed7E7",
    "contractAddress": "0x7e3B1Ea2D36Ac407b4B027a1E93CcC97629198f3",
    "transactionIndex": 2,
    "gasUsed": "695620",
    "logsBloom": "0x00000000000000020000000000000000000000000000000000000000000000000000000000004000000000000000000000048000000000000000000000000000000000000000000000000000000000800000000000000000000100000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000020000000000000000001000000000000000000000000004000000000000000000001000000000000000000000000000000100000000000000000000000000000000000000001000000000000000000000000000000100000",
    "blockHash": "0x9e659365f9c1e5cf54c320282ce1f60bae4c6128e85f7850db6ace494fa07fea",
    "transactionHash": "0xf1c1a471325f1367d41c33b319f52424c9baa4ff6e6ca17d0b4bd843f5dbd497",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 26210391,
        "transactionHash": "0xf1c1a471325f1367d41c33b319f52424c9baa4ff6e6ca17d0b4bd843f5dbd497",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000079f3e0ffb9ab81c05731a05dbcde4956014ed7e7",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000316d410b99989c0000000000000000000000000000000000000000000000008fb2ee281bc6f19d000000000000000000000000000000000000000000000cc3dad1af4ddb1f18900000000000000000000000000000000000000000000000008f8180e7102d5901000000000000000000000000000000000000000000000cc3db031c8ee6b8b12c",
        "logIndex": 104,
        "blockHash": "0x9e659365f9c1e5cf54c320282ce1f60bae4c6128e85f7850db6ace494fa07fea"
      }
    ],
    "blockNumber": 26210391,
    "cumulativeGasUsed": "1947793",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCf73231F28B7331BBe3124B907840A94851f9f11"
  ],
  "numDeployments": 1,
  "solcInputHash": "7a2cfdc22e90f64b0ee3b228d040bdf6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fxChild\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fxChild\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxRootTunnel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rootMessageSender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"processMessageFromRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendEncodedBytesMessageToRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendEncodedMessageToRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"sendMessageToRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fxRootTunnel\",\"type\":\"address\"}],\"name\":\"setFxRootTunnel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/l2/L2Tunnel.sol\":\"L2Tunnel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/l2/L2Tunnel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport 'fx-portal/contracts/tunnel/FxBaseChildTunnel.sol';\\n\\ncontract L2Tunnel is FxBaseChildTunnel {\\n\\tconstructor(address _fxChild) FxBaseChildTunnel(_fxChild) {}\\n\\n\\tfunction _processMessageFromRoot(\\n\\t\\tuint256 stateId,\\n\\t\\taddress sender,\\n\\t\\tbytes memory message\\n\\t) internal override {\\n\\t\\temit Received(stateId, sender, message);\\n\\t}\\n\\n\\tuint256 _nonce = 0;\\n\\tstruct Encoded {\\n\\t\\tuint256 nonce;\\n\\t\\taddress from;\\n\\t}\\n\\n\\tfunction sendMessageToRoot(bytes memory message) public {\\n\\t\\t_sendMessageToRoot(message);\\n\\t}\\n\\n\\tfunction sendEncodedMessageToRoot() public {\\n\\t\\t_nonce += 1;\\n\\t\\tbytes memory message = abi.encode(Encoded(_nonce, msg.sender));\\n\\t\\t_sendMessageToRoot(message);\\n\\t}\\n\\n\\tfunction sendEncodedBytesMessageToRoot() public {\\n\\t\\t_nonce += 1;\\n\\t\\tbytes memory message = abi.encode(\\n\\t\\t\\tabi.encode(Encoded(_nonce, msg.sender))\\n\\t\\t);\\n\\n\\t\\t_sendMessageToRoot(message);\\n\\t}\\n\\n\\tevent Received(uint256 stateId, address sender, bytes message);\\n}\\n\",\"keccak256\":\"0x336053be8344da5258b73f9a3cb223b8d267049b8f9ef76dab4a1123ee589993\",\"license\":\"MIT\"},\"fx-portal/contracts/tunnel/FxBaseChildTunnel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// IFxMessageProcessor represents interface to process message\\ninterface IFxMessageProcessor {\\n    function processMessageFromRoot(uint256 stateId, address rootMessageSender, bytes calldata data) external;\\n}\\n\\n/**\\n* @notice Mock child tunnel contract to receive and send message from L2\\n*/\\nabstract contract FxBaseChildTunnel is IFxMessageProcessor{\\n    // MessageTunnel on L1 will get data from this event\\n    event MessageSent(bytes message);\\n\\n    // fx child\\n    address public fxChild;\\n\\n    // fx root tunnel\\n    address public fxRootTunnel;\\n\\n    constructor(address _fxChild) {\\n        fxChild = _fxChild;\\n    }\\n\\n    // Sender must be fxRootTunnel in case of ERC20 tunnel\\n    modifier validateSender(address sender) {\\n        require(sender == fxRootTunnel, \\\"FxBaseChildTunnel: INVALID_SENDER_FROM_ROOT\\\");\\n        _;\\n    }\\n\\n    // set fxRootTunnel if not set already\\n    function setFxRootTunnel(address _fxRootTunnel) external {\\n        require(fxRootTunnel == address(0x0), \\\"FxBaseChildTunnel: ROOT_TUNNEL_ALREADY_SET\\\");\\n        fxRootTunnel = _fxRootTunnel;\\n    }\\n\\n    function processMessageFromRoot(uint256 stateId, address rootMessageSender, bytes calldata data) external override {\\n        require(msg.sender == fxChild, \\\"FxBaseChildTunnel: INVALID_SENDER\\\");\\n        _processMessageFromRoot(stateId, rootMessageSender, data);\\n    }\\n\\n    /**\\n     * @notice Emit message that can be received on Root Tunnel\\n     * @dev Call the internal function when need to emit message\\n     * @param message bytes message that will be sent to Root Tunnel\\n     * some message examples -\\n     *   abi.encode(tokenId);\\n     *   abi.encode(tokenId, tokenMetadata);\\n     *   abi.encode(messageType, messageData);\\n     */\\n    function _sendMessageToRoot(bytes memory message) internal {\\n        emit MessageSent(message);\\n    }\\n\\n    /**\\n     * @notice Process message received from Root Tunnel\\n     * @dev function needs to be implemented to handle message as per requirement\\n     * This is called by onStateReceive function.\\n     * Since it is called via a system call, any event will not be emitted during its execution.\\n     * @param stateId unique state id\\n     * @param sender root message sender\\n     * @param message bytes message that was sent from Root Tunnel\\n     */\\n    function _processMessageFromRoot(uint256 stateId, address sender, bytes memory message) virtual internal;\\n}\\n\",\"keccak256\":\"0xf5b498e3d85967e8bedcfa7f10078d6018b6168eb56926d1b18a526e68e1c467\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600060025534801561001557600080fd5b50604051610c39380380610c3983398181016040528101906100379190610094565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610106565b60008151905061008e816100ef565b92915050565b6000602082840312156100a657600080fd5b60006100b48482850161007f565b91505092915050565b60006100c8826100cf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f8816100bd565b811461010357600080fd5b50565b610b24806101156000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063888370941161005b57806388837094146100c85780639a113ee2146100e45780639a7c4b7114610100578063daf722191461011c5761007d565b8063450d11f0146100825780636e3ad4ee146100a05780637f1e9cb0146100aa575b600080fd5b61008a610126565b6040516100979190610755565b60405180910390f35b6100a861014a565b005b6100b26101c0565b6040516100bf9190610755565b60405180910390f35b6100e260048036038101906100dd9190610595565b6101e6565b005b6100fe60048036038101906100f991906105be565b6102bb565b005b61011a600480360381019061011591906105ff565b6102c7565b005b6101246103aa565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016002600082825461015d91906108ae565b925050819055506000604051806040016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff168152506040516020016101a391906107d2565b60405160208183030381529060405290506101bd8161043f565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e906107b2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102c48161043f565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90610792565b60405180910390fd5b6103a4848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610479565b50505050565b6001600260008282546103bd91906108ae565b925050819055506000604051806040016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff1681525060405160200161040391906107d2565b6040516020818303038152906040526040516020016104229190610770565b604051602081830303815290604052905061043c8161043f565b50565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b0368160405161046e9190610770565b60405180910390a150565b7f606834f57405380c4fb88d1f4850326ad3885f014bab3b568dfbf7a041eef7388383836040516104ac939291906107ed565b60405180910390a1505050565b60006104cc6104c784610850565b61082b565b9050828152602081018484840111156104e457600080fd5b6104ef848285610940565b509392505050565b60008135905061050681610ac0565b92915050565b60008083601f84011261051e57600080fd5b8235905067ffffffffffffffff81111561053757600080fd5b60208301915083600182028301111561054f57600080fd5b9250929050565b600082601f83011261056757600080fd5b81356105778482602086016104b9565b91505092915050565b60008135905061058f81610ad7565b92915050565b6000602082840312156105a757600080fd5b60006105b5848285016104f7565b91505092915050565b6000602082840312156105d057600080fd5b600082013567ffffffffffffffff8111156105ea57600080fd5b6105f684828501610556565b91505092915050565b6000806000806060858703121561061557600080fd5b600061062387828801610580565b9450506020610634878288016104f7565b935050604085013567ffffffffffffffff81111561065157600080fd5b61065d8782880161050c565b925092505092959194509250565b61067481610904565b82525050565b61068381610904565b82525050565b600061069482610881565b61069e818561088c565b93506106ae81856020860161094f565b6106b781610a11565b840191505092915050565b60006106cf60218361089d565b91506106da82610a22565b604082019050919050565b60006106f2602a8361089d565b91506106fd82610a71565b604082019050919050565b60408201600082015161071e6000850182610737565b506020820151610731602085018261066b565b50505050565b61074081610936565b82525050565b61074f81610936565b82525050565b600060208201905061076a600083018461067a565b92915050565b6000602082019050818103600083015261078a8184610689565b905092915050565b600060208201905081810360008301526107ab816106c2565b9050919050565b600060208201905081810360008301526107cb816106e5565b9050919050565b60006040820190506107e76000830184610708565b92915050565b60006060820190506108026000830186610746565b61080f602083018561067a565b81810360408301526108218184610689565b9050949350505050565b6000610835610846565b90506108418282610982565b919050565b6000604051905090565b600067ffffffffffffffff82111561086b5761086a6109e2565b5b61087482610a11565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006108b982610936565b91506108c483610936565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108f9576108f86109b3565b5b828201905092915050565b600061090f82610916565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561096d578082015181840152602081019050610952565b8381111561097c576000848401525b50505050565b61098b82610a11565b810181811067ffffffffffffffff821117156109aa576109a96109e2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560008201527f5200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160008201527f4c52454144595f53455400000000000000000000000000000000000000000000602082015250565b610ac981610904565b8114610ad457600080fd5b50565b610ae081610936565b8114610aeb57600080fd5b5056fea2646970667358221220152066c82efc17b8b4191a75afab9259cb59159ae75750157c7a3de434c1faf964736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063888370941161005b57806388837094146100c85780639a113ee2146100e45780639a7c4b7114610100578063daf722191461011c5761007d565b8063450d11f0146100825780636e3ad4ee146100a05780637f1e9cb0146100aa575b600080fd5b61008a610126565b6040516100979190610755565b60405180910390f35b6100a861014a565b005b6100b26101c0565b6040516100bf9190610755565b60405180910390f35b6100e260048036038101906100dd9190610595565b6101e6565b005b6100fe60048036038101906100f991906105be565b6102bb565b005b61011a600480360381019061011591906105ff565b6102c7565b005b6101246103aa565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016002600082825461015d91906108ae565b925050819055506000604051806040016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff168152506040516020016101a391906107d2565b60405160208183030381529060405290506101bd8161043f565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e906107b2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102c48161043f565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90610792565b60405180910390fd5b6103a4848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610479565b50505050565b6001600260008282546103bd91906108ae565b925050819055506000604051806040016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff1681525060405160200161040391906107d2565b6040516020818303038152906040526040516020016104229190610770565b604051602081830303815290604052905061043c8161043f565b50565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b0368160405161046e9190610770565b60405180910390a150565b7f606834f57405380c4fb88d1f4850326ad3885f014bab3b568dfbf7a041eef7388383836040516104ac939291906107ed565b60405180910390a1505050565b60006104cc6104c784610850565b61082b565b9050828152602081018484840111156104e457600080fd5b6104ef848285610940565b509392505050565b60008135905061050681610ac0565b92915050565b60008083601f84011261051e57600080fd5b8235905067ffffffffffffffff81111561053757600080fd5b60208301915083600182028301111561054f57600080fd5b9250929050565b600082601f83011261056757600080fd5b81356105778482602086016104b9565b91505092915050565b60008135905061058f81610ad7565b92915050565b6000602082840312156105a757600080fd5b60006105b5848285016104f7565b91505092915050565b6000602082840312156105d057600080fd5b600082013567ffffffffffffffff8111156105ea57600080fd5b6105f684828501610556565b91505092915050565b6000806000806060858703121561061557600080fd5b600061062387828801610580565b9450506020610634878288016104f7565b935050604085013567ffffffffffffffff81111561065157600080fd5b61065d8782880161050c565b925092505092959194509250565b61067481610904565b82525050565b61068381610904565b82525050565b600061069482610881565b61069e818561088c565b93506106ae81856020860161094f565b6106b781610a11565b840191505092915050565b60006106cf60218361089d565b91506106da82610a22565b604082019050919050565b60006106f2602a8361089d565b91506106fd82610a71565b604082019050919050565b60408201600082015161071e6000850182610737565b506020820151610731602085018261066b565b50505050565b61074081610936565b82525050565b61074f81610936565b82525050565b600060208201905061076a600083018461067a565b92915050565b6000602082019050818103600083015261078a8184610689565b905092915050565b600060208201905081810360008301526107ab816106c2565b9050919050565b600060208201905081810360008301526107cb816106e5565b9050919050565b60006040820190506107e76000830184610708565b92915050565b60006060820190506108026000830186610746565b61080f602083018561067a565b81810360408301526108218184610689565b9050949350505050565b6000610835610846565b90506108418282610982565b919050565b6000604051905090565b600067ffffffffffffffff82111561086b5761086a6109e2565b5b61087482610a11565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006108b982610936565b91506108c483610936565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108f9576108f86109b3565b5b828201905092915050565b600061090f82610916565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561096d578082015181840152602081019050610952565b8381111561097c576000848401525b50505050565b61098b82610a11565b810181811067ffffffffffffffff821117156109aa576109a96109e2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560008201527f5200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160008201527f4c52454144595f53455400000000000000000000000000000000000000000000602082015250565b610ac981610904565b8114610ad457600080fd5b50565b610ae081610936565b8114610aeb57600080fd5b5056fea2646970667358221220152066c82efc17b8b4191a75afab9259cb59159ae75750157c7a3de434c1faf964736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2087,
        "contract": "contracts/l2/L2Tunnel.sol:L2Tunnel",
        "label": "fxChild",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2089,
        "contract": "contracts/l2/L2Tunnel.sol:L2Tunnel",
        "label": "fxRootTunnel",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 85,
        "contract": "contracts/l2/L2Tunnel.sol:L2Tunnel",
        "label": "_nonce",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}