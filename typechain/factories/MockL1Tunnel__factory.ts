/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockL1Tunnel, MockL1TunnelInterface } from "../MockL1Tunnel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_checkpointManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fxRoot",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "L1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "L1MappingInitERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "L1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "L2Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "L1MappingMappedERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "L1TokenAddress",
        type: "address",
      },
    ],
    name: "mapERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mappedTokenStatus",
    outputs: [
      {
        internalType: "enum L1Tunnel.TokenStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mappedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200203d3803806200203d8339818101604052810190620000379190620001cd565b8181818181600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620000de620000d2620000e860201b60201c565b620000f060201b60201c565b505050506200025c565b600033905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c78162000242565b92915050565b60008060408385031215620001e157600080fd5b6000620001f185828601620001b6565b92505060206200020485828601620001b6565b9150509250929050565b60006200021b8262000222565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200024d816200020e565b81146200025957600080fd5b50565b611dd1806200026c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639f25bb5a1161008c578063de9b771f11610066578063de9b771f146101ee578063e6ede14d1461020c578063f2fde38b1461023c578063f953cec714610258576100cf565b80639f25bb5a14610198578063aea4e49e146101b4578063c0857ba0146101d0576100cf565b80630a1a1968146100d45780630e387de614610104578063607f2d4214610122578063715018a6146101525780638da5cb5b1461015c578063972c49281461017a575b600080fd5b6100ee60048036038101906100e99190611256565b610274565b6040516100fb91906117de565b60405180910390f35b61010c610294565b6040516101199190611742565b60405180910390f35b61013c600480360381019061013791906112d1565b6102bb565b6040516101499190611727565b60405180910390f35b61015a6102db565b005b610164610363565b604051610171919061167c565b60405180910390f35b61018261038d565b60405161018f919061167c565b60405180910390f35b6101b260048036038101906101ad9190611256565b6103b3565b005b6101ce60048036038101906101c99190611256565b6109d7565b005b6101d8610aac565b6040516101e59190611778565b60405180910390f35b6101f6610ad2565b6040516102039190611793565b60405180910390f35b61022660048036038101906102219190611256565b610af6565b604051610233919061167c565b60405180910390f35b61025660048036038101906102519190611256565b610b29565b005b610272600480360381019061026d91906112fa565b610c21565b005b60066020528060005260406000206000915054906101000a900460ff1681565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03660001b81565b60036020528060005260406000206000915054906101000a900460ff1681565b6102e3610c2d565b73ffffffffffffffffffffffffffffffffffffffff16610301610363565b73ffffffffffffffffffffffffffffffffffffffff1614610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e90611859565b60405180910390fd5b6103616000610c35565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103bb610c2d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561041757600080fd5b505afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f919061127f565b73ffffffffffffffffffffffffffffffffffffffff16146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90611899565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f80ac58cd000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016104fe919061175d565b60206040518083038186803b15801561051657600080fd5b505afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e91906112a8565b80156105ff57508073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f5b5e139f000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016105ae919061175d565b60206040518083038186803b1580156105c657600080fd5b505afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe91906112a8565b5b61063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063590611879565b60405180910390fd5b60006002811115610678577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156106fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461073d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610734906117f9565b60405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156107c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060006040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561085757600080fd5b505afa15801561086b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610894919061138f565b81526020018373ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156108df57600080fd5b505afa1580156108f3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061091c919061138f565b8152602001610929610c2d565b73ffffffffffffffffffffffffffffffffffffffff1681525060405160200161095291906118d9565b6040516020818303038152906040529050600080826040516020016109789291906117ae565b60405160208183030381529060405290507f25d6912299d0e59bb6cdb2dc634b244699031f35916f85fc9ddc074faa2c453d836109b3610c2d565b6040516109c1929190611697565b60405180910390a16109d281610cfb565b505050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5f90611819565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b31610c2d565b73ffffffffffffffffffffffffffffffffffffffff16610b4f610363565b73ffffffffffffffffffffffffffffffffffffffff1614610ba5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9c90611859565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90611839565b60405180910390fd5b610c1e81610c35565b50565b610c2a81610dad565b50565b600033905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4720477600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610d789291906116f7565b600060405180830381600087803b158015610d9257600080fd5b505af1158015610da6573d6000803e3d6000fd5b5050505050565b60008082806020019051810190610dc4919061133b565b91509150600180811115610e01577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826001811115610e3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610fbf57600081806020019051810190610e5691906113d0565b9050600260066000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836002811115610ee5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550806020015160056000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f57ca430506a83a2bf3c8e62d65efad6b0a55147b3dea2d54edee5e8efe996608816000015182602001518360800151604051610faf939291906116c0565b60405180910390a1505050610ffa565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff1906118b9565b60405180910390fd5b50565b600061101061100b84611920565b6118fb565b90508281526020810184848401111561102857600080fd5b611033848285611ad1565b509392505050565b600061104e61104984611920565b6118fb565b90508281526020810184848401111561106657600080fd5b611071848285611ae0565b509392505050565b600061108c61108784611951565b6118fb565b9050828152602081018484840111156110a457600080fd5b6110af848285611ae0565b509392505050565b6000813590506110c681611d46565b92915050565b6000815190506110db81611d46565b92915050565b6000815190506110f081611d5d565b92915050565b60008135905061110581611d74565b92915050565b600082601f83011261111c57600080fd5b813561112c848260208601610ffd565b91505092915050565b600082601f83011261114657600080fd5b815161115684826020860161103b565b91505092915050565b60008151905061116e81611d8b565b92915050565b600082601f83011261118557600080fd5b8151611195848260208601611079565b91505092915050565b600060a082840312156111b057600080fd5b6111ba60a06118fb565b905060006111ca848285016110cc565b60008301525060206111de848285016110cc565b602083015250604082015167ffffffffffffffff8111156111fe57600080fd5b61120a84828501611174565b604083015250606082015167ffffffffffffffff81111561122a57600080fd5b61123684828501611174565b606083015250608061124a848285016110cc565b60808301525092915050565b60006020828403121561126857600080fd5b6000611276848285016110b7565b91505092915050565b60006020828403121561129157600080fd5b600061129f848285016110cc565b91505092915050565b6000602082840312156112ba57600080fd5b60006112c8848285016110e1565b91505092915050565b6000602082840312156112e357600080fd5b60006112f1848285016110f6565b91505092915050565b60006020828403121561130c57600080fd5b600082013567ffffffffffffffff81111561132657600080fd5b6113328482850161110b565b91505092915050565b6000806040838503121561134e57600080fd5b600061135c8582860161115f565b925050602083015167ffffffffffffffff81111561137957600080fd5b61138585828601611135565b9150509250929050565b6000602082840312156113a157600080fd5b600082015167ffffffffffffffff8111156113bb57600080fd5b6113c784828501611174565b91505092915050565b6000602082840312156113e257600080fd5b600082015167ffffffffffffffff8111156113fc57600080fd5b6114088482850161119e565b91505092915050565b61141a816119cb565b82525050565b611429816119cb565b82525050565b611438816119dd565b82525050565b611447816119e9565b82525050565b611456816119f3565b82525050565b600061146782611982565b6114718185611998565b9350611481818560208601611ae0565b61148a81611ba2565b840191505092915050565b61149e81611a65565b82525050565b6114ad81611a89565b82525050565b6114bc81611aad565b82525050565b6114cb81611abf565b82525050565b60006114dc8261198d565b6114e681856119a9565b93506114f6818560208601611ae0565b6114ff81611ba2565b840191505092915050565b60006115176016836119ba565b915061152282611bb3565b602082019050919050565b600061153a602a836119ba565b915061154582611bdc565b604082019050919050565b600061155d6026836119ba565b915061156882611c2b565b604082019050919050565b60006115806020836119ba565b915061158b82611c7a565b602082019050919050565b60006115a36013836119ba565b91506115ae82611ca3565b602082019050919050565b60006115c66015836119ba565b91506115d182611ccc565b602082019050919050565b60006115e9600c836119ba565b91506115f482611cf5565b602082019050919050565b600060a0830160008301516116176000860182611411565b50602083015161162a6020860182611411565b506040830151848203604086015261164282826114d1565b9150506060830151848203606086015261165c82826114d1565b91505060808301516116716080860182611411565b508091505092915050565b60006020820190506116916000830184611420565b92915050565b60006040820190506116ac6000830185611420565b6116b96020830184611420565b9392505050565b60006060820190506116d56000830186611420565b6116e26020830185611420565b6116ef6040830184611420565b949350505050565b600060408201905061170c6000830185611420565b818103602083015261171e818461145c565b90509392505050565b600060208201905061173c600083018461142f565b92915050565b6000602082019050611757600083018461143e565b92915050565b6000602082019050611772600083018461144d565b92915050565b600060208201905061178d6000830184611495565b92915050565b60006020820190506117a860008301846114a4565b92915050565b60006040820190506117c360008301856114b3565b81810360208301526117d5818461145c565b90509392505050565b60006020820190506117f360008301846114c2565b92915050565b600060208201905081810360008301526118128161150a565b9050919050565b600060208201905081810360008301526118328161152d565b9050919050565b6000602082019050818103600083015261185281611550565b9050919050565b6000602082019050818103600083015261187281611573565b9050919050565b6000602082019050818103600083015261189281611596565b9050919050565b600060208201905081810360008301526118b2816115b9565b9050919050565b600060208201905081810360008301526118d2816115dc565b9050919050565b600060208201905081810360008301526118f381846115ff565b905092915050565b6000611905611916565b90506119118282611b13565b919050565b6000604051905090565b600067ffffffffffffffff82111561193b5761193a611b73565b5b61194482611ba2565b9050602081019050919050565b600067ffffffffffffffff82111561196c5761196b611b73565b5b61197582611ba2565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006119d682611a45565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050611a2d82611d1e565b919050565b6000819050611a4082611d32565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a7082611a77565b9050919050565b6000611a8282611a45565b9050919050565b6000611a9482611a9b565b9050919050565b6000611aa682611a45565b9050919050565b6000611ab882611a1f565b9050919050565b6000611aca82611a32565b9050919050565b82818337600083830152505050565b60005b83811015611afe578082015181840152602081019050611ae3565b83811115611b0d576000848401525b50505050565b611b1c82611ba2565b810181811067ffffffffffffffff82111715611b3b57611b3a611b73565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f416c7265616479206d6170706564206f7220696e697400000000000000000000600082015250565b7f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160008201527f4c52454144595f53455400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e206e6f7420737570706f7274656400000000000000000000000000600082015250565b7f4e6f74206f776e6572206f66204c3120546f6b656e0000000000000000000000600082015250565b7f496e76616c696420747970650000000000000000000000000000000000000000600082015250565b60028110611d2f57611d2e611b44565b5b50565b60038110611d4357611d42611b44565b5b50565b611d4f816119cb565b8114611d5a57600080fd5b50565b611d66816119dd565b8114611d7157600080fd5b50565b611d7d816119e9565b8114611d8857600080fd5b50565b60028110611d9857600080fd5b5056fea2646970667358221220e866e6e15156fdf25aa095437091c96b2ed9f020f26f938cdcc3db13d262f05764736f6c63430008040033";

export class MockL1Tunnel__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _checkpointManager: string,
    _fxRoot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockL1Tunnel> {
    return super.deploy(
      _checkpointManager,
      _fxRoot,
      overrides || {}
    ) as Promise<MockL1Tunnel>;
  }
  getDeployTransaction(
    _checkpointManager: string,
    _fxRoot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _checkpointManager,
      _fxRoot,
      overrides || {}
    );
  }
  attach(address: string): MockL1Tunnel {
    return super.attach(address) as MockL1Tunnel;
  }
  connect(signer: Signer): MockL1Tunnel__factory {
    return super.connect(signer) as MockL1Tunnel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockL1TunnelInterface {
    return new utils.Interface(_abi) as MockL1TunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockL1Tunnel {
    return new Contract(address, _abi, signerOrProvider) as MockL1Tunnel;
  }
}
