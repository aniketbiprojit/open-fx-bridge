/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockL1Tunnel, MockL1TunnelInterface } from "../MockL1Tunnel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_checkpointManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fxRoot",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "L1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "L1MappingInitERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "L1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "L2Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "L1MappingMappedERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "L1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "L1Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "L1TokenAddress",
        type: "address",
      },
    ],
    name: "mapERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mappedTokenStatus",
    outputs: [
      {
        internalType: "enum L1Tunnel.TokenStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mappedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "L1TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferToL2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029bd380380620029bd8339818101604052810190620000379190620001d5565b8181818181600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620000de620000d2620000f060201b60201c565b620000f860201b60201c565b60016005819055505050505062000264565b600033905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001cf816200024a565b92915050565b60008060408385031215620001e957600080fd5b6000620001f985828601620001be565b92505060206200020c85828601620001be565b9150509250929050565b600062000223826200022a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002558162000216565b81146200026157600080fd5b50565b61274980620002746000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063aea4e49e1161008c578063de9b771f11610066578063de9b771f14610225578063e6ede14d14610243578063f2fde38b14610273578063f953cec71461028f576100ea565b8063aea4e49e146101cf578063c0857ba0146101eb578063d642a54214610209576100ea565b8063715018a6116100c8578063715018a61461016d5780638da5cb5b14610177578063972c4928146101955780639f25bb5a146101b3576100ea565b80630a1a1968146100ef5780630e387de61461011f578063607f2d421461013d575b600080fd5b610109600480360381019061010491906118f7565b6102ab565b604051610116919061201d565b60405180910390f35b6101276102cb565b6040516101349190611f81565b60405180910390f35b610157600480360381019061015291906119ae565b6102f2565b6040516101649190611f66565b60405180910390f35b610175610312565b005b61017f61039a565b60405161018c9190611e84565b60405180910390f35b61019d6103c4565b6040516101aa9190611e84565b60405180910390f35b6101cd60048036038101906101c891906118f7565b6103ea565b005b6101e960048036038101906101e491906118f7565b610a64565b005b6101f3610b39565b6040516102009190611fb7565b60405180910390f35b610223600480360381019061021e9190611949565b610b5f565b005b61022d610ea5565b60405161023a9190611fd2565b60405180910390f35b61025d600480360381019061025891906118f7565b610ec9565b60405161026a9190611e84565b60405180910390f35b61028d600480360381019061028891906118f7565b610efc565b005b6102a960048036038101906102a491906119d7565b610ff4565b005b60076020528060005260406000206000915054906101000a900460ff1681565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03660001b81565b60036020528060005260406000206000915054906101000a900460ff1681565b61031a611000565b73ffffffffffffffffffffffffffffffffffffffff1661033861039a565b73ffffffffffffffffffffffffffffffffffffffff161461038e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610385906120d8565b60405180910390fd5b6103986000611008565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026005541415610430576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042790612158565b60405180910390fd5b6002600581905550610440611000565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049c57600080fd5b505afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190611920565b73ffffffffffffffffffffffffffffffffffffffff161461052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190612118565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f80ac58cd000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016105839190611f9c565b60206040518083038186803b15801561059b57600080fd5b505afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d39190611985565b801561068457508073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f5b5e139f000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016106339190611f9c565b60206040518083038186803b15801561064b57600080fd5b505afa15801561065f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106839190611985565b5b6106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba906120f8565b60405180910390fd5b600060028111156106fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166002811115610782577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990612058565b60405180910390fd5b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600281111561084b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060006040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156108dc57600080fd5b505afa1580156108f0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109199190611a6c565b81526020018373ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561096457600080fd5b505afa158015610978573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109a19190611a6c565b81526020016109ae611000565b73ffffffffffffffffffffffffffffffffffffffff168152506040516020016109d79190612178565b6040516020818303038152906040529050600080826040516020016109fd929190611fed565b60405160208183030381529060405290507f25d6912299d0e59bb6cdb2dc634b244699031f35916f85fc9ddc074faa2c453d83610a38611000565b604051610a46929190611e9f565b60405180910390a1610a57816110ce565b5050600160058190555050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aec90612078565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026005541415610ba5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9c90612158565b60405180910390fd5b6002600581905550600280811115610be6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166002811115610c6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca2906120b8565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd610ccf611000565b30846040518463ffffffff1660e01b8152600401610cef93929190611eff565b600060405180830381600087803b158015610d0957600080fd5b505af1158015610d1d573d6000803e3d6000fd5b50505050600060405180608001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001610d52611000565b73ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018473ffffffffffffffffffffffffffffffffffffffff1663c87b56dd856040518263ffffffff1660e01b8152600401610dac91906121bc565b60006040518083038186803b158015610dc457600080fd5b505afa158015610dd8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e019190611a6c565b815250604051602001610e14919061219a565b60405160208183030381529060405290506000600282604051602001610e3b929190611fed565b60405160208183030381529060405290507faca316ff480149672397660744423f87453c12fa85d5fb28f9f83ddcbd702e7584610e76611000565b85604051610e8693929190611eff565b60405180910390a1610e97816110ce565b505060016005819055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f04611000565b73ffffffffffffffffffffffffffffffffffffffff16610f2261039a565b73ffffffffffffffffffffffffffffffffffffffff1614610f78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6f906120d8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fe8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdf90612098565b60405180910390fd5b610ff181611008565b50565b610ffd81611180565b50565b600033905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4720477600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161114b929190611f36565b600060405180830381600087803b15801561116557600080fd5b505af1158015611179573d6000803e3d6000fd5b5050505050565b600080828060200190518101906111979190611a18565b91509150600160038111156111d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600381111561120e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156113935760008180602001905181019061122a9190611aad565b9050600260076000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156112b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550806020015160066000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f57ca430506a83a2bf3c8e62d65efad6b0a55147b3dea2d54edee5e8efe99660881600001518260200151836080015160405161138393929190611ec8565b60405180910390a15050506115e5565b6003808111156113cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826003811115611405577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156115aa576000818060200190518101906114219190611aee565b9050600081600001519050600280811115611465577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156114ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461152a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152190612038565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd30846020015185604001516040518463ffffffff1660e01b815260040161156f93929190611eff565b600060405180830381600087803b15801561158957600080fd5b505af115801561159d573d6000803e3d6000fd5b50505050505050506115e5565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115dc90612138565b60405180910390fd5b50565b60006115fb6115f6846121fc565b6121d7565b90508281526020810184848401111561161357600080fd5b61161e8482856123b7565b509392505050565b6000611639611634846121fc565b6121d7565b90508281526020810184848401111561165157600080fd5b61165c8482856123c6565b509392505050565b60006116776116728461222d565b6121d7565b90508281526020810184848401111561168f57600080fd5b61169a8482856123c6565b509392505050565b6000813590506116b1816126a7565b92915050565b6000815190506116c6816126a7565b92915050565b6000815190506116db816126be565b92915050565b6000813590506116f0816126d5565b92915050565b600082601f83011261170757600080fd5b81356117178482602086016115e8565b91505092915050565b600082601f83011261173157600080fd5b8151611741848260208601611626565b91505092915050565b600081519050611759816126ec565b92915050565b600082601f83011261177057600080fd5b8151611780848260208601611664565b91505092915050565b600060a0828403121561179b57600080fd5b6117a560a06121d7565b905060006117b5848285016116b7565b60008301525060206117c9848285016116b7565b602083015250604082015167ffffffffffffffff8111156117e957600080fd5b6117f58482850161175f565b604083015250606082015167ffffffffffffffff81111561181557600080fd5b6118218482850161175f565b6060830152506080611835848285016116b7565b60808301525092915050565b60006080828403121561185357600080fd5b61185d60806121d7565b9050600061186d848285016116b7565b6000830152506020611881848285016116b7565b6020830152506040611895848285016118e2565b604083015250606082015167ffffffffffffffff8111156118b557600080fd5b6118c18482850161175f565b60608301525092915050565b6000813590506118dc816126fc565b92915050565b6000815190506118f1816126fc565b92915050565b60006020828403121561190957600080fd5b6000611917848285016116a2565b91505092915050565b60006020828403121561193257600080fd5b6000611940848285016116b7565b91505092915050565b6000806040838503121561195c57600080fd5b600061196a858286016116a2565b925050602061197b858286016118cd565b9150509250929050565b60006020828403121561199757600080fd5b60006119a5848285016116cc565b91505092915050565b6000602082840312156119c057600080fd5b60006119ce848285016116e1565b91505092915050565b6000602082840312156119e957600080fd5b600082013567ffffffffffffffff811115611a0357600080fd5b611a0f848285016116f6565b91505092915050565b60008060408385031215611a2b57600080fd5b6000611a398582860161174a565b925050602083015167ffffffffffffffff811115611a5657600080fd5b611a6285828601611720565b9150509250929050565b600060208284031215611a7e57600080fd5b600082015167ffffffffffffffff811115611a9857600080fd5b611aa48482850161175f565b91505092915050565b600060208284031215611abf57600080fd5b600082015167ffffffffffffffff811115611ad957600080fd5b611ae584828501611789565b91505092915050565b600060208284031215611b0057600080fd5b600082015167ffffffffffffffff811115611b1a57600080fd5b611b2684828501611841565b91505092915050565b611b38816122a7565b82525050565b611b47816122a7565b82525050565b611b56816122b9565b82525050565b611b65816122c5565b82525050565b611b74816122cf565b82525050565b6000611b858261225e565b611b8f8185612274565b9350611b9f8185602086016123c6565b611ba881612488565b840191505092915050565b611bbc8161234b565b82525050565b611bcb8161236f565b82525050565b611bda81612393565b82525050565b611be9816123a5565b82525050565b6000611bfa82612269565b611c048185612285565b9350611c148185602086016123c6565b611c1d81612488565b840191505092915050565b6000611c35601083612296565b9150611c4082612499565b602082019050919050565b6000611c58601683612296565b9150611c63826124c2565b602082019050919050565b6000611c7b602a83612296565b9150611c86826124eb565b604082019050919050565b6000611c9e602683612296565b9150611ca98261253a565b604082019050919050565b6000611cc1601083612296565b9150611ccc82612589565b602082019050919050565b6000611ce4602083612296565b9150611cef826125b2565b602082019050919050565b6000611d07601383612296565b9150611d12826125db565b602082019050919050565b6000611d2a601583612296565b9150611d3582612604565b602082019050919050565b6000611d4d600c83612296565b9150611d588261262d565b602082019050919050565b6000611d70601f83612296565b9150611d7b82612656565b602082019050919050565b600060a083016000830151611d9e6000860182611b2f565b506020830151611db16020860182611b2f565b5060408301518482036040860152611dc98282611bef565b91505060608301518482036060860152611de38282611bef565b9150506080830151611df86080860182611b2f565b508091505092915050565b6000608083016000830151611e1b6000860182611b2f565b506020830151611e2e6020860182611b2f565b506040830151611e416040860182611e66565b5060608301518482036060860152611e598282611bef565b9150508091505092915050565b611e6f81612341565b82525050565b611e7e81612341565b82525050565b6000602082019050611e996000830184611b3e565b92915050565b6000604082019050611eb46000830185611b3e565b611ec16020830184611b3e565b9392505050565b6000606082019050611edd6000830186611b3e565b611eea6020830185611b3e565b611ef76040830184611b3e565b949350505050565b6000606082019050611f146000830186611b3e565b611f216020830185611b3e565b611f2e6040830184611e75565b949350505050565b6000604082019050611f4b6000830185611b3e565b8181036020830152611f5d8184611b7a565b90509392505050565b6000602082019050611f7b6000830184611b4d565b92915050565b6000602082019050611f966000830184611b5c565b92915050565b6000602082019050611fb16000830184611b6b565b92915050565b6000602082019050611fcc6000830184611bb3565b92915050565b6000602082019050611fe76000830184611bc2565b92915050565b60006040820190506120026000830185611bd1565b81810360208301526120148184611b7a565b90509392505050565b60006020820190506120326000830184611be0565b92915050565b6000602082019050818103600083015261205181611c28565b9050919050565b6000602082019050818103600083015261207181611c4b565b9050919050565b6000602082019050818103600083015261209181611c6e565b9050919050565b600060208201905081810360008301526120b181611c91565b9050919050565b600060208201905081810360008301526120d181611cb4565b9050919050565b600060208201905081810360008301526120f181611cd7565b9050919050565b6000602082019050818103600083015261211181611cfa565b9050919050565b6000602082019050818103600083015261213181611d1d565b9050919050565b6000602082019050818103600083015261215181611d40565b9050919050565b6000602082019050818103600083015261217181611d63565b9050919050565b600060208201905081810360008301526121928184611d86565b905092915050565b600060208201905081810360008301526121b48184611e03565b905092915050565b60006020820190506121d16000830184611e75565b92915050565b60006121e16121f2565b90506121ed82826123f9565b919050565b6000604051905090565b600067ffffffffffffffff82111561221757612216612459565b5b61222082612488565b9050602081019050919050565b600067ffffffffffffffff82111561224857612247612459565b5b61225182612488565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006122b282612321565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60008190506123098261267f565b919050565b600081905061231c82612693565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006123568261235d565b9050919050565b600061236882612321565b9050919050565b600061237a82612381565b9050919050565b600061238c82612321565b9050919050565b600061239e826122fb565b9050919050565b60006123b08261230e565b9050919050565b82818337600083830152505050565b60005b838110156123e45780820151818401526020810190506123c9565b838111156123f3576000848401525b50505050565b61240282612488565b810181811067ffffffffffffffff8211171561242157612420612459565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f546f6b656e204e6f74206d617070656400000000000000000000000000000000600082015250565b7f416c7265616479206d6170706564206f7220696e697400000000000000000000600082015250565b7f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160008201527f4c52454144595f53455400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e206e6f74206d617070656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e206e6f7420737570706f7274656400000000000000000000000000600082015250565b7f4e6f74206f776e6572206f66204c3120546f6b656e0000000000000000000000600082015250565b7f496e76616c696420747970650000000000000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600481106126905761268f61242a565b5b50565b600381106126a4576126a361242a565b5b50565b6126b0816122a7565b81146126bb57600080fd5b50565b6126c7816122b9565b81146126d257600080fd5b50565b6126de816122c5565b81146126e957600080fd5b50565b600481106126f957600080fd5b50565b61270581612341565b811461271057600080fd5b5056fea2646970667358221220a1d94cb012fc3dec8743c176ed65d04c0cfc8af204c4c4ca5f93fb314d03072c64736f6c63430008040033";

export class MockL1Tunnel__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _checkpointManager: string,
    _fxRoot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockL1Tunnel> {
    return super.deploy(
      _checkpointManager,
      _fxRoot,
      overrides || {}
    ) as Promise<MockL1Tunnel>;
  }
  getDeployTransaction(
    _checkpointManager: string,
    _fxRoot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _checkpointManager,
      _fxRoot,
      overrides || {}
    );
  }
  attach(address: string): MockL1Tunnel {
    return super.attach(address) as MockL1Tunnel;
  }
  connect(signer: Signer): MockL1Tunnel__factory {
    return super.connect(signer) as MockL1Tunnel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockL1TunnelInterface {
    return new utils.Interface(_abi) as MockL1TunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockL1Tunnel {
    return new Contract(address, _abi, signerOrProvider) as MockL1Tunnel;
  }
}
