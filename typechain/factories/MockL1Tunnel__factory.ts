/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockL1Tunnel, MockL1TunnelInterface } from "../MockL1Tunnel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_checkpointManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fxRoot",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "L1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "L1MappingInitERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "L1TokenAddress",
        type: "address",
      },
    ],
    name: "mapERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mappedTokenStatus",
    outputs: [
      {
        internalType: "enum L1Tunnel.TokenStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mappedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f1438038062001f148339818101604052810190620000379190620001cd565b8181818181600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620000de620000d2620000e860201b60201c565b620000f060201b60201c565b505050506200025c565b600033905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c78162000242565b92915050565b60008060408385031215620001e157600080fd5b6000620001f185828601620001b6565b92505060206200020485828601620001b6565b9150509250929050565b60006200021b8262000222565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200024d816200020e565b81146200025957600080fd5b50565b611ca8806200026c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639f25bb5a1161008c578063de9b771f11610066578063de9b771f146101ee578063e6ede14d1461020c578063f2fde38b1461023c578063f953cec714610258576100cf565b80639f25bb5a14610198578063aea4e49e146101b4578063c0857ba0146101d0576100cf565b80630a1a1968146100d45780630e387de614610104578063607f2d4214610122578063715018a6146101525780638da5cb5b1461015c578063972c49281461017a575b600080fd5b6100ee60048036038101906100e991906111d0565b610274565b6040516100fb91906116fe565b60405180910390f35b61010c610294565b6040516101199190611662565b60405180910390f35b61013c6004803603810190610137919061124b565b6102bb565b6040516101499190611647565b60405180910390f35b61015a6102db565b005b610164610363565b60405161017191906115d3565b60405180910390f35b61018261038d565b60405161018f91906115d3565b60405180910390f35b6101b260048036038101906101ad91906111d0565b6103b3565b005b6101ce60048036038101906101c991906111d0565b6109d7565b005b6101d8610aac565b6040516101e59190611698565b60405180910390f35b6101f6610ad2565b60405161020391906116b3565b60405180910390f35b610226600480360381019061022191906111d0565b610af6565b60405161023391906115d3565b60405180910390f35b610256600480360381019061025191906111d0565b610b29565b005b610272600480360381019061026d9190611274565b610c21565b005b60066020528060005260406000206000915054906101000a900460ff1681565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03660001b81565b60036020528060005260406000206000915054906101000a900460ff1681565b6102e3610c2d565b73ffffffffffffffffffffffffffffffffffffffff16610301610363565b73ffffffffffffffffffffffffffffffffffffffff1614610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e90611779565b60405180910390fd5b6103616000610c35565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103bb610c2d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561041757600080fd5b505afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f91906111f9565b73ffffffffffffffffffffffffffffffffffffffff16146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c906117b9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f80ac58cd000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016104fe919061167d565b60206040518083038186803b15801561051657600080fd5b505afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190611222565b80156105ff57508073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f5b5e139f000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016105ae919061167d565b60206040518083038186803b1580156105c657600080fd5b505afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190611222565b5b61063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063590611799565b60405180910390fd5b60006002811115610678577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660028111156106fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461073d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073490611719565b60405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360028111156107c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060006040518060a001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561085757600080fd5b505afa15801561086b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108949190611309565b81526020018373ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156108df57600080fd5b505afa1580156108f3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061091c9190611309565b8152602001610929610c2d565b73ffffffffffffffffffffffffffffffffffffffff1681525060405160200161095291906117d9565b6040516020818303038152906040529050600080826040516020016109789291906116ce565b60405160208183030381529060405290507f25d6912299d0e59bb6cdb2dc634b244699031f35916f85fc9ddc074faa2c453d836109b3610c2d565b6040516109c19291906115ee565b60405180910390a16109d281610cfb565b505050565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5f90611739565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b31610c2d565b73ffffffffffffffffffffffffffffffffffffffff16610b4f610363565b73ffffffffffffffffffffffffffffffffffffffff1614610ba5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9c90611779565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90611759565b60405180910390fd5b610c1e81610c35565b50565b610c2a81610dad565b50565b600033905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4720477600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610d78929190611617565b600060405180830381600087803b158015610d9257600080fd5b505af1158015610da6573d6000803e3d6000fd5b5050505050565b60008082806020019051810190610dc491906112b5565b91509150600180811115610e01577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826001811115610e3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610f7257600081806020019051810190610e56919061134a565b9050600260066000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690836002811115610ee5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550806020015160056000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b505050565b6000610f8a610f8584611820565b6117fb565b905082815260208101848484011115610fa257600080fd5b610fad8482856119d1565b509392505050565b6000610fc8610fc384611820565b6117fb565b905082815260208101848484011115610fe057600080fd5b610feb8482856119e0565b509392505050565b600061100661100184611851565b6117fb565b90508281526020810184848401111561101e57600080fd5b6110298482856119e0565b509392505050565b60008135905061104081611c1d565b92915050565b60008151905061105581611c1d565b92915050565b60008151905061106a81611c34565b92915050565b60008135905061107f81611c4b565b92915050565b600082601f83011261109657600080fd5b81356110a6848260208601610f77565b91505092915050565b600082601f8301126110c057600080fd5b81516110d0848260208601610fb5565b91505092915050565b6000815190506110e881611c62565b92915050565b600082601f8301126110ff57600080fd5b815161110f848260208601610ff3565b91505092915050565b600060a0828403121561112a57600080fd5b61113460a06117fb565b9050600061114484828501611046565b600083015250602061115884828501611046565b602083015250604082015167ffffffffffffffff81111561117857600080fd5b611184848285016110ee565b604083015250606082015167ffffffffffffffff8111156111a457600080fd5b6111b0848285016110ee565b60608301525060806111c484828501611046565b60808301525092915050565b6000602082840312156111e257600080fd5b60006111f084828501611031565b91505092915050565b60006020828403121561120b57600080fd5b600061121984828501611046565b91505092915050565b60006020828403121561123457600080fd5b60006112428482850161105b565b91505092915050565b60006020828403121561125d57600080fd5b600061126b84828501611070565b91505092915050565b60006020828403121561128657600080fd5b600082013567ffffffffffffffff8111156112a057600080fd5b6112ac84828501611085565b91505092915050565b600080604083850312156112c857600080fd5b60006112d6858286016110d9565b925050602083015167ffffffffffffffff8111156112f357600080fd5b6112ff858286016110af565b9150509250929050565b60006020828403121561131b57600080fd5b600082015167ffffffffffffffff81111561133557600080fd5b611341848285016110ee565b91505092915050565b60006020828403121561135c57600080fd5b600082015167ffffffffffffffff81111561137657600080fd5b61138284828501611118565b91505092915050565b611394816118cb565b82525050565b6113a3816118cb565b82525050565b6113b2816118dd565b82525050565b6113c1816118e9565b82525050565b6113d0816118f3565b82525050565b60006113e182611882565b6113eb8185611898565b93506113fb8185602086016119e0565b61140481611aa2565b840191505092915050565b61141881611965565b82525050565b61142781611989565b82525050565b611436816119ad565b82525050565b611445816119bf565b82525050565b60006114568261188d565b61146081856118a9565b93506114708185602086016119e0565b61147981611aa2565b840191505092915050565b60006114916016836118ba565b915061149c82611ab3565b602082019050919050565b60006114b4602a836118ba565b91506114bf82611adc565b604082019050919050565b60006114d76026836118ba565b91506114e282611b2b565b604082019050919050565b60006114fa6020836118ba565b915061150582611b7a565b602082019050919050565b600061151d6013836118ba565b915061152882611ba3565b602082019050919050565b60006115406015836118ba565b915061154b82611bcc565b602082019050919050565b600060a08301600083015161156e600086018261138b565b506020830151611581602086018261138b565b5060408301518482036040860152611599828261144b565b915050606083015184820360608601526115b3828261144b565b91505060808301516115c8608086018261138b565b508091505092915050565b60006020820190506115e8600083018461139a565b92915050565b6000604082019050611603600083018561139a565b611610602083018461139a565b9392505050565b600060408201905061162c600083018561139a565b818103602083015261163e81846113d6565b90509392505050565b600060208201905061165c60008301846113a9565b92915050565b600060208201905061167760008301846113b8565b92915050565b600060208201905061169260008301846113c7565b92915050565b60006020820190506116ad600083018461140f565b92915050565b60006020820190506116c8600083018461141e565b92915050565b60006040820190506116e3600083018561142d565b81810360208301526116f581846113d6565b90509392505050565b6000602082019050611713600083018461143c565b92915050565b6000602082019050818103600083015261173281611484565b9050919050565b60006020820190508181036000830152611752816114a7565b9050919050565b60006020820190508181036000830152611772816114ca565b9050919050565b60006020820190508181036000830152611792816114ed565b9050919050565b600060208201905081810360008301526117b281611510565b9050919050565b600060208201905081810360008301526117d281611533565b9050919050565b600060208201905081810360008301526117f38184611556565b905092915050565b6000611805611816565b90506118118282611a13565b919050565b6000604051905090565b600067ffffffffffffffff82111561183b5761183a611a73565b5b61184482611aa2565b9050602081019050919050565b600067ffffffffffffffff82111561186c5761186b611a73565b5b61187582611aa2565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006118d682611945565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600081905061192d82611bf5565b919050565b600081905061194082611c09565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061197082611977565b9050919050565b600061198282611945565b9050919050565b60006119948261199b565b9050919050565b60006119a682611945565b9050919050565b60006119b88261191f565b9050919050565b60006119ca82611932565b9050919050565b82818337600083830152505050565b60005b838110156119fe5780820151818401526020810190506119e3565b83811115611a0d576000848401525b50505050565b611a1c82611aa2565b810181811067ffffffffffffffff82111715611a3b57611a3a611a73565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f416c7265616479206d6170706564206f7220696e697400000000000000000000600082015250565b7f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160008201527f4c52454144595f53455400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e206e6f7420737570706f7274656400000000000000000000000000600082015250565b7f4e6f74206f776e6572206f66204c3120546f6b656e0000000000000000000000600082015250565b60028110611c0657611c05611a44565b5b50565b60038110611c1a57611c19611a44565b5b50565b611c26816118cb565b8114611c3157600080fd5b50565b611c3d816118dd565b8114611c4857600080fd5b50565b611c54816118e9565b8114611c5f57600080fd5b50565b60028110611c6f57600080fd5b5056fea26469706673582212207dff6c963ea94296bcccc0c6ef2035d5e4757619d559793d710d553b8ce9456f64736f6c63430008040033";

export class MockL1Tunnel__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _checkpointManager: string,
    _fxRoot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockL1Tunnel> {
    return super.deploy(
      _checkpointManager,
      _fxRoot,
      overrides || {}
    ) as Promise<MockL1Tunnel>;
  }
  getDeployTransaction(
    _checkpointManager: string,
    _fxRoot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _checkpointManager,
      _fxRoot,
      overrides || {}
    );
  }
  attach(address: string): MockL1Tunnel {
    return super.attach(address) as MockL1Tunnel;
  }
  connect(signer: Signer): MockL1Tunnel__factory {
    return super.connect(signer) as MockL1Tunnel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockL1TunnelInterface {
    return new utils.Interface(_abi) as MockL1TunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockL1Tunnel {
    return new Contract(address, _abi, signerOrProvider) as MockL1Tunnel;
  }
}
