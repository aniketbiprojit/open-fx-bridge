/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { L2Tunnel, L2TunnelInterface } from "../L2Tunnel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
      {
        internalType: "contract ProxyAdmin",
        name: "_proxyAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_cloneAbleERC721",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mappedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyAdmin",
    outputs: [
      {
        internalType: "contract ProxyAdmin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000dc438038062000dc48339818101604052810190620000379190620001de565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620000996200008d620000e260201b60201c565b620000ea60201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200029b565b600033905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c18162000267565b92915050565b600081519050620001d88162000281565b92915050565b60008060408385031215620001f257600080fd5b60006200020285828601620001b0565b92505060206200021585828601620001c7565b9150509250929050565b60006200022c8262000247565b9050919050565b600062000240826200021f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b62000272816200021f565b81146200027e57600080fd5b50565b6200028c8162000233565b81146200029857600080fd5b50565b610b1980620002ab6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063888370941161006657806388837094146101255780638da5cb5b146101415780639a7c4b711461015f578063e6ede14d1461017b578063f2fde38b146101ab5761009e565b80633e47158c146100a3578063450d11f0146100c15780636b36156e146100df578063715018a6146100fd5780637f1e9cb014610107575b600080fd5b6100ab6101c7565b6040516100b89190610893565b60405180910390f35b6100c96101ed565b6040516100d69190610878565b60405180910390f35b6100e7610211565b6040516100f49190610878565b60405180910390f35b610105610237565b005b61010f6102bf565b60405161011c9190610878565b60405180910390f35b61013f600480360381019061013a9190610739565b6102e5565b005b6101496103ba565b6040516101569190610878565b60405180910390f35b61017960048036038101906101749190610762565b6103e4565b005b61019560048036038101906101909190610739565b6104c7565b6040516101a29190610878565b60405180910390f35b6101c560048036038101906101c09190610739565b6104fa565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61023f6105f2565b73ffffffffffffffffffffffffffffffffffffffff1661025d6103ba565b73ffffffffffffffffffffffffffffffffffffffff16146102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa906108ee565b60405180910390fd5b6102bd60006105fa565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036d9061090e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610472576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610469906108ae565b60405180910390fd5b6104c1848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506106c0565b50505050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105026105f2565b73ffffffffffffffffffffffffffffffffffffffff166105206103ba565b73ffffffffffffffffffffffffffffffffffffffff1614610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d906108ee565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd906108ce565b60405180910390fd5b6105ef816105fa565b50565b600033905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b6000813590506106d481610ab5565b92915050565b60008083601f8401126106ec57600080fd5b8235905067ffffffffffffffff81111561070557600080fd5b60208301915083600182028301111561071d57600080fd5b9250929050565b60008135905061073381610acc565b92915050565b60006020828403121561074b57600080fd5b6000610759848285016106c5565b91505092915050565b6000806000806060858703121561077857600080fd5b600061078687828801610724565b9450506020610797878288016106c5565b935050604085013567ffffffffffffffff8111156107b457600080fd5b6107c0878288016106da565b925092505092959194509250565b6107d78161093f565b82525050565b6107e68161097b565b82525050565b60006107f960218361092e565b91506108048261099f565b604082019050919050565b600061081c60268361092e565b9150610827826109ee565b604082019050919050565b600061083f60208361092e565b915061084a82610a3d565b602082019050919050565b6000610862602a8361092e565b915061086d82610a66565b604082019050919050565b600060208201905061088d60008301846107ce565b92915050565b60006020820190506108a860008301846107dd565b92915050565b600060208201905081810360008301526108c7816107ec565b9050919050565b600060208201905081810360008301526108e78161080f565b9050919050565b6000602082019050818103600083015261090781610832565b9050919050565b6000602082019050818103600083015261092781610855565b9050919050565b600082825260208201905092915050565b600061094a82610951565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109868261098d565b9050919050565b600061099882610951565b9050919050565b7f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560008201527f5200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160008201527f4c52454144595f53455400000000000000000000000000000000000000000000602082015250565b610abe8161093f565b8114610ac957600080fd5b50565b610ad581610971565b8114610ae057600080fd5b5056fea264697066735822122042ad6c1703983c3770573f1a712d4646e37ebf9c03b38d41accee0ea37ad442f64736f6c63430008040033";

export class L2Tunnel__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _fxChild: string,
    _proxyAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L2Tunnel> {
    return super.deploy(
      _fxChild,
      _proxyAdmin,
      overrides || {}
    ) as Promise<L2Tunnel>;
  }
  getDeployTransaction(
    _fxChild: string,
    _proxyAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fxChild, _proxyAdmin, overrides || {});
  }
  attach(address: string): L2Tunnel {
    return super.attach(address) as L2Tunnel;
  }
  connect(signer: Signer): L2Tunnel__factory {
    return super.connect(signer) as L2Tunnel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2TunnelInterface {
    return new utils.Interface(_abi) as L2TunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2Tunnel {
    return new Contract(address, _abi, signerOrProvider) as L2Tunnel;
  }
}
